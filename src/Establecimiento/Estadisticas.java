/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Establecimiento;

import Conexion.Conexion;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guada
 */
public class Estadisticas extends javax.swing.JPanel {
    
    float lts[] = new float[12];
    
    /**
     * Creates new form Estadisticas
     */
    public Estadisticas(int ecod) {
        initComponents();
        
        // Obtengo datos de la base de datos para calcular las estadisticas
        try {
            Class.forName("org.postgresql.Driver");
            Connection conex = DriverManager.getConnection(Conexion.cadena, Conexion.user, Conexion.pass);
            java.sql.Statement st = conex.createStatement();
            DefaultTableModel m = (DefaultTableModel) aux.getModel();
            
            String sql = "SELECT fecha, cantlts, sng, densidad, produccion.acod, nombre\n" +
                    "FROM produccion, animal, establecimiento\n" +
                    "WHERE (produccion.acod=animal.acod AND animal.ecod=establecimiento.ecod) " +
                    "AND  establecimiento.ecod="+ ecod + ";";            
            ResultSet result = st.executeQuery(sql);
            String fila[] = new String[6];
            while (result.next()) {
                fila[0] = result.getString("fecha");
                fila[1] = result.getString("cantlts");
                fila[2] = result.getString("sng");
                fila[3] = result.getString("densidad");
                fila[4] = result.getString("acod");
                fila[5] = result.getString("nombre");
                m.addRow(fila);
            }
            aux.setModel(m);
            result.close();
            st.close();
            conex.close();
            //tablaEscondida.setVisible(false);
            
        } catch (Exception exc) {
            System.out.println("Errorx:" + exc.getMessage());
        }
        
        try {
            Class.forName("org.postgresql.Driver");
            Connection conex = DriverManager.getConnection(Conexion.cadena, Conexion.user, Conexion.pass);
            java.sql.Statement st = conex.createStatement();
            DefaultTableModel m = (DefaultTableModel) tablaProduccion.getModel();
            
            String sql = "SELECT fecha, SUM(cantlts)\n" +
                    "FROM produccion, animal, establecimiento\n" +
                    "WHERE (produccion.acod=animal.acod AND animal.ecod=establecimiento.ecod) " +
                    "AND  establecimiento.ecod= 1\n" +
                    "GROUP BY fecha;";            
            ResultSet result = st.executeQuery(sql);
            String fila[] = new String[2];
            while (result.next()) {
                fila[0] = result.getString("fecha");
                fila[1] = result.getString("sum");                
                m.addRow(fila);
            }
            tablaProduccion.setModel(m);            
            result.close();
            st.close();
            conex.close();
            
        } catch (Exception exc) {
            System.out.println("Errorx:" + exc.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tablaEscondida = new javax.swing.JScrollPane();
        aux = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        datos = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        tablaEscondida.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tablaEscondidaComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                tablaEscondidaComponentRemoved(evt);
            }
        });
        tablaEscondida.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                tablaEscondidaComponentHidden(evt);
            }
        });

        aux.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Cant. Lts.", "SNG", "Densidad", "Acod", "Establecimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaEscondida.setViewportView(aux);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(tablaEscondida, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        add(jPanel1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        datos.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(datos, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void tablaEscondidaComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tablaEscondidaComponentHidden
        // TODO add your handling code here:

    }//GEN-LAST:event_tablaEscondidaComponentHidden

    private void tablaEscondidaComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tablaEscondidaComponentRemoved
        // TODO add your handling code here
    }//GEN-LAST:event_tablaEscondidaComponentRemoved

    private void tablaEscondidaComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tablaEscondidaComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaEscondidaComponentAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable aux;
    private javax.swing.JScrollPane datos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTable1;
    private javax.swing.JScrollPane tablaEscondida;
    // End of variables declaration//GEN-END:variables
}
